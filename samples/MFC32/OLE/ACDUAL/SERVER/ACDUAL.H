/* This header file machine-generated by mktyplib.exe */
/* Interface to type library: ACDual */

// This is a part of the Microsoft Foundation Classes C++ library.
// Copyright (C) 1992-1996 Microsoft Corporation
// All rights reserved.
//
// This source code is only intended as a supplement to the
// Microsoft Foundation Classes Reference and related
// electronic documentation provided with the library.
// See these sources for detailed information regarding the
// Microsoft Foundation Classes product.

#ifndef _ACDual_H_
#define _ACDual_H_

DEFINE_GUID(LIBID_ACDual,0x4B115284L,0x32F0,0x11CF,0xAC,0x85,0x44,0x45,0x53,0x54,0x00,0x00);

DEFINE_GUID(DIID_IAClick,0x4B115280L,0x32F0,0x11CF,0xAC,0x85,0x44,0x45,0x53,0x54,0x00,0x00);

/* Definition of dispatch interface: IAClick */
#undef INTERFACE
#define INTERFACE IAClick

DECLARE_INTERFACE_(IAClick, IDispatch)
{
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IAClick properties:
    BSTR text;
    short x;
    short y;
    IDispatch * Position;
    */

    /* IAClick methods:
    void RefreshWindow(void);
    void SetAllProps(short x, short y, BSTR text);
    void ShowWindow(void);
    void TestError(short wCode);
    */
};

interface IDualAutoClickPoint;

DEFINE_GUID(IID_IDualAClick,0x0BDD0E81L,0x0DD7,0x11CF,0xBB,0xA8,0x44,0x45,0x53,0x54,0x00,0x00);

/* Definition of interface: IDualAClick */
#undef INTERFACE
#define INTERFACE IDualAClick

DECLARE_INTERFACE_(IDualAClick, IDispatch)
{
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IDualAClick methods */
    STDMETHOD(put_text)(THIS_ BSTR newText) PURE;
    STDMETHOD(get_text)(THIS_ BSTR FAR* retval) PURE;
    STDMETHOD(put_x)(THIS_ short newX) PURE;
    STDMETHOD(get_x)(THIS_ short FAR* retval) PURE;
    STDMETHOD(put_y)(THIS_ short newY) PURE;
    STDMETHOD(get_y)(THIS_ short FAR* retval) PURE;
    STDMETHOD(put_Position)(THIS_ IDualAutoClickPoint FAR* newPosition) PURE;
    STDMETHOD(get_Position)(THIS_ IDualAutoClickPoint FAR* FAR* retval) PURE;
    STDMETHOD(RefreshWindow)(THIS) PURE;
    STDMETHOD(SetAllProps)(THIS_ short x, short y, BSTR text) PURE;
    STDMETHOD(ShowWindow)(THIS) PURE;
    STDMETHOD(TestError)(THIS_ short wCode) PURE;
};

DEFINE_GUID(CLSID_Document,0x4B115281L,0x32F0,0x11CF,0xAC,0x85,0x44,0x45,0x53,0x54,0x00,0x00);

#ifdef __cplusplus
class Document;
#endif

DEFINE_GUID(DIID_IAutoClickPoint,0x4B115283L,0x32F0,0x11CF,0xAC,0x85,0x44,0x45,0x53,0x54,0x00,0x00);

/* Definition of dispatch interface: IAutoClickPoint */
#undef INTERFACE
#define INTERFACE IAutoClickPoint

DECLARE_INTERFACE_(IAutoClickPoint, IDispatch)
{
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IAutoClickPoint properties:
    short x;
    short y;
    */
};

DEFINE_GUID(IID_IDualAutoClickPoint,0x0BDD0E80L,0x0DD7,0x11CF,0xBB,0xA8,0x44,0x45,0x53,0x54,0x00,0x00);

/* Definition of interface: IDualAutoClickPoint */
#undef INTERFACE
#define INTERFACE IDualAutoClickPoint

DECLARE_INTERFACE_(IDualAutoClickPoint, IDispatch)
{
#ifndef NO_BASEINTERFACE_FUNCS

    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      OLECHAR FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;
#endif

    /* IDualAutoClickPoint methods */
    STDMETHOD(put_x)(THIS_ short newX) PURE;
    STDMETHOD(get_x)(THIS_ short FAR* retval) PURE;
    STDMETHOD(put_y)(THIS_ short newY) PURE;
    STDMETHOD(get_y)(THIS_ short FAR* retval) PURE;
};

DEFINE_GUID(CLSID_Point,0x4B115285L,0x32F0,0x11CF,0xAC,0x85,0x44,0x45,0x53,0x54,0x00,0x00);

#ifdef __cplusplus
class Point;
#endif

#endif
