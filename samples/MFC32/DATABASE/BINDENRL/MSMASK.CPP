// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


#include "stdafx.h"
#include "msmask.h"

/////////////////////////////////////////////////////////////////////////////
// CMsmask

IMPLEMENT_DYNCREATE(CMsmask, CWnd)

/////////////////////////////////////////////////////////////////////////////
// CMsmask properties

CString CMsmask::GetMask()
{
	CString result;
	GetProperty(0x10, VT_BSTR, (void*)&result);
	return result;
}

void CMsmask::SetMask(LPCTSTR propVal)
{
	SetProperty(0x10, VT_BSTR, propVal);
}

long CMsmask::GetClipMode()
{
	long result;
	GetProperty(0x1, VT_I4, (void*)&result);
	return result;
}

void CMsmask::SetClipMode(long propVal)
{
	SetProperty(0x1, VT_I4, propVal);
}

BOOL CMsmask::GetPromptInclude()
{
	BOOL result;
	GetProperty(0x2, VT_BOOL, (void*)&result);
	return result;
}

void CMsmask::SetPromptInclude(BOOL propVal)
{
	SetProperty(0x2, VT_BOOL, propVal);
}

BOOL CMsmask::GetAllowPrompt()
{
	BOOL result;
	GetProperty(0x3, VT_BOOL, (void*)&result);
	return result;
}

void CMsmask::SetAllowPrompt(BOOL propVal)
{
	SetProperty(0x3, VT_BOOL, propVal);
}

BOOL CMsmask::GetAutoTab()
{
	BOOL result;
	GetProperty(0x4, VT_BOOL, (void*)&result);
	return result;
}

void CMsmask::SetAutoTab(BOOL propVal)
{
	SetProperty(0x4, VT_BOOL, propVal);
}

BOOL CMsmask::GetFontBold()
{
	BOOL result;
	GetProperty(0x6, VT_BOOL, (void*)&result);
	return result;
}

void CMsmask::SetFontBold(BOOL propVal)
{
	SetProperty(0x6, VT_BOOL, propVal);
}

BOOL CMsmask::GetFontItalic()
{
	BOOL result;
	GetProperty(0x7, VT_BOOL, (void*)&result);
	return result;
}

void CMsmask::SetFontItalic(BOOL propVal)
{
	SetProperty(0x7, VT_BOOL, propVal);
}

CString CMsmask::GetFontName()
{
	CString result;
	GetProperty(0x8, VT_BSTR, (void*)&result);
	return result;
}

void CMsmask::SetFontName(LPCTSTR propVal)
{
	SetProperty(0x8, VT_BSTR, propVal);
}

float CMsmask::GetFontSize()
{
	float result;
	GetProperty(0x9, VT_R4, (void*)&result);
	return result;
}

void CMsmask::SetFontSize(float propVal)
{
	SetProperty(0x9, VT_R4, propVal);
}

BOOL CMsmask::GetFontStrikethru()
{
	BOOL result;
	GetProperty(0xa, VT_BOOL, (void*)&result);
	return result;
}

void CMsmask::SetFontStrikethru(BOOL propVal)
{
	SetProperty(0xa, VT_BOOL, propVal);
}

BOOL CMsmask::GetFontUnderline()
{
	BOOL result;
	GetProperty(0xb, VT_BOOL, (void*)&result);
	return result;
}

void CMsmask::SetFontUnderline(BOOL propVal)
{
	SetProperty(0xb, VT_BOOL, propVal);
}

BOOL CMsmask::GetHideSelection()
{
	BOOL result;
	GetProperty(0xc, VT_BOOL, (void*)&result);
	return result;
}

void CMsmask::SetHideSelection(BOOL propVal)
{
	SetProperty(0xc, VT_BOOL, propVal);
}

short CMsmask::GetMaxLength()
{
	short result;
	GetProperty(0xd, VT_I2, (void*)&result);
	return result;
}

void CMsmask::SetMaxLength(short propVal)
{
	SetProperty(0xd, VT_I2, propVal);
}

CString CMsmask::GetFormat()
{
	CString result;
	GetProperty(0xe, VT_BSTR, (void*)&result);
	return result;
}

void CMsmask::SetFormat(LPCTSTR propVal)
{
	SetProperty(0xe, VT_BSTR, propVal);
}

CString CMsmask::GetFormattedText()
{
	CString result;
	GetProperty(0xf, VT_BSTR, (void*)&result);
	return result;
}

void CMsmask::SetFormattedText(LPCTSTR propVal)
{
	SetProperty(0xf, VT_BSTR, propVal);
}

long CMsmask::GetSelLength()
{
	long result;
	GetProperty(0x11, VT_I4, (void*)&result);
	return result;
}

void CMsmask::SetSelLength(long propVal)
{
	SetProperty(0x11, VT_I4, propVal);
}

long CMsmask::GetSelStart()
{
	long result;
	GetProperty(0x12, VT_I4, (void*)&result);
	return result;
}

void CMsmask::SetSelStart(long propVal)
{
	SetProperty(0x12, VT_I4, propVal);
}

CString CMsmask::GetSelText()
{
	CString result;
	GetProperty(0x13, VT_BSTR, (void*)&result);
	return result;
}

void CMsmask::SetSelText(LPCTSTR propVal)
{
	SetProperty(0x13, VT_BSTR, propVal);
}

CString CMsmask::GetClipText()
{
	CString result;
	GetProperty(0x14, VT_BSTR, (void*)&result);
	return result;
}

void CMsmask::SetClipText(LPCTSTR propVal)
{
	SetProperty(0x14, VT_BSTR, propVal);
}

CString CMsmask::GetPromptChar()
{
	CString result;
	GetProperty(0x15, VT_BSTR, (void*)&result);
	return result;
}

void CMsmask::SetPromptChar(LPCTSTR propVal)
{
	SetProperty(0x15, VT_BSTR, propVal);
}

OLE_COLOR CMsmask::GetBackColor()
{
	OLE_COLOR result;
	GetProperty(DISPID_BACKCOLOR, VT_I4, (void*)&result);
	return result;
}

void CMsmask::SetBackColor(OLE_COLOR propVal)
{
	SetProperty(DISPID_BACKCOLOR, VT_I4, propVal);
}

LPFONTDISP CMsmask::GetFont()
{
	LPFONTDISP result;
	GetProperty(DISPID_FONT, VT_DISPATCH, (void*)&result);
	return result;
}

void CMsmask::SetFont(LPFONTDISP propVal)
{
	SetProperty(DISPID_FONT, VT_DISPATCH, propVal);
}

OLE_COLOR CMsmask::GetForeColor()
{
	OLE_COLOR result;
	GetProperty(DISPID_FORECOLOR, VT_I4, (void*)&result);
	return result;
}

void CMsmask::SetForeColor(OLE_COLOR propVal)
{
	SetProperty(DISPID_FORECOLOR, VT_I4, propVal);
}

CString CMsmask::GetText()
{
	CString result;
	GetProperty(0x16, VT_BSTR, (void*)&result);
	return result;
}

void CMsmask::SetText(LPCTSTR propVal)
{
	SetProperty(0x16, VT_BSTR, propVal);
}

long CMsmask::GetMousePointer()
{
	long result;
	GetProperty(0x5, VT_I4, (void*)&result);
	return result;
}

void CMsmask::SetMousePointer(long propVal)
{
	SetProperty(0x5, VT_I4, propVal);
}

LPDISPATCH CMsmask::GetMouseIcon()
{
	LPDISPATCH result;
	GetProperty(0x17, VT_DISPATCH, (void*)&result);
	return result;
}

void CMsmask::SetMouseIcon(LPDISPATCH propVal)
{
	SetProperty(0x17, VT_DISPATCH, propVal);
}

BOOL CMsmask::GetEnabled()
{
	BOOL result;
	GetProperty(DISPID_ENABLED, VT_BOOL, (void*)&result);
	return result;
}

void CMsmask::SetEnabled(BOOL propVal)
{
	SetProperty(DISPID_ENABLED, VT_BOOL, propVal);
}

short CMsmask::GetBorderStyle()
{
	short result;
	GetProperty(DISPID_BORDERSTYLE, VT_I4, (void*)&result);
	return result;
}

void CMsmask::SetBorderStyle(short propVal)
{
	SetProperty(DISPID_BORDERSTYLE, VT_I4, propVal);
}

long CMsmask::GetAppearance()
{
	long result;
	GetProperty(0x18, VT_I4, (void*)&result);
	return result;
}

void CMsmask::SetAppearance(long propVal)
{
	SetProperty(0x18, VT_I4, propVal);
}

OLE_HANDLE CMsmask::GetHWnd()
{
	OLE_HANDLE result;
	GetProperty(DISPID_HWND, VT_I4, (void*)&result);
	return result;
}

void CMsmask::SetHWnd(OLE_HANDLE propVal)
{
	SetProperty(DISPID_HWND, VT_I4, propVal);
}

/////////////////////////////////////////////////////////////////////////////
// CMsmask operations

void CMsmask::AboutBox()
{
	InvokeHelper(0xfffffdd8, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CMsmask::Refresh()
{
	InvokeHelper(DISPID_REFRESH, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}
