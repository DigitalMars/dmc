#ifndef __RDORESLT_H__
#define __RDORESLT_H__

// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


// Dispatch interfaces referenced by this interface
class CrdoColumns;

/////////////////////////////////////////////////////////////////////////////
// CrdoResultset wrapper class

class CrdoResultset : public COleDispatchDriver
{
public:
	CrdoResultset() {}		// Calls COleDispatchDriver default constructor
	CrdoResultset(LPDISPATCH pDispatch) : COleDispatchDriver(pDispatch) {}
	CrdoResultset(const CrdoResultset& dispatchSrc) : COleDispatchDriver(dispatchSrc) {}

// Attributes
public:

// Operations
public:
	// method 'QueryInterface' not emitted because of invalid return type or parameter type
	unsigned long AddRef();
	unsigned long Release();
	// method 'GetTypeInfoCount' not emitted because of invalid return type or parameter type
	// method 'GetTypeInfo' not emitted because of invalid return type or parameter type
	// method 'GetIDsOfNames' not emitted because of invalid return type or parameter type
	// method 'Invoke' not emitted because of invalid return type or parameter type
	VARIANT GetBookmark();
	void SetBookmark(const VARIANT& newValue);
	CrdoColumns GetRdoColumns();
	BOOL GetBof();
	BOOL GetBookmarkable();
	BOOL GetEof();
	BOOL GetLockEdits();
	CString GetName();
	BOOL GetTransactions();
	short GetType();
	long GetRowCount();
	BOOL GetUpdatable();
	BOOL GetRestartable();
	long GetEditMode();
	float GetPercentPosition();
	void SetPercentPosition(float newValue);
	long GetHStmt();
	long GetAbsolutePosition();
	void SetAbsolutePosition(long nNewValue);
	BOOL GetStillExecuting();
	VARIANT GetLastModified();
	void AddNew();
	void Close();
	void Delete();
	void Edit();
	void MoveFirst();
	void MoveLast();
	void MoveNext();
	void MovePrevious();
	void Update();
	void Requery();
	void Move(long Rows, const VARIANT& Start);
	BOOL MoreResults();
	void Cancel();
	void CancelUpdate();
	VARIANT GetRows(const VARIANT& NumRows);
	void IsKnownLastRow(BOOL* pRetval);
	void IsKnownFirstRow(BOOL* pRetval);
	void Advise(LPUNKNOWN pSink, long* pnCookie);
	void Unadvise(long nCookie);
	void FreezeNotifications(BOOL Frozen);
	void FindByValues(long bmk, LPUNKNOWN pBmk, long lFF, long lV, LPUNKNOWN rgColumns, LPUNKNOWN rgValues, LPUNKNOWN plSeekFlags, LPUNKNOWN pvFetchParams);
	LPDISPATCH GetOwner();
	void RDCClose();
	VARIANT GetCollect(const VARIANT& Index);
	void SetCollect(const VARIANT& Index, const VARIANT& newValue);
	CString GetNameA();
	VARIANT GetRowsA(const VARIANT& NumRows);
	VARIANT GetCollectA(const VARIANT& Index);
	void SetCollectA(const VARIANT& Index, const VARIANT& newValue);
};

#endif // __RDORESLT_H__
