// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


#include "stdafx.h"
#include "accpict.h"

/////////////////////////////////////////////////////////////////////////////
// CAccessPict

IMPLEMENT_DYNCREATE(CAccessPict, CWnd)

/////////////////////////////////////////////////////////////////////////////
// CAccessPict properties

BOOL CAccessPict::GetIsAccessObject()
{
	BOOL result;
	GetProperty(0x3, VT_BOOL, (void*)&result);
	return result;
}

void CAccessPict::SetIsAccessObject(BOOL propVal)
{
	SetProperty(0x3, VT_BOOL, propVal);
}

BOOL CAccessPict::GetStretchToFit()
{
	BOOL result;
	GetProperty(0x1, VT_BOOL, (void*)&result);
	return result;
}

void CAccessPict::SetStretchToFit(BOOL propVal)
{
	SetProperty(0x1, VT_BOOL, propVal);
}

BOOL CAccessPict::GetPreserveRatio()
{
	BOOL result;
	GetProperty(0x2, VT_BOOL, (void*)&result);
	return result;
}

void CAccessPict::SetPreserveRatio(BOOL propVal)
{
	SetProperty(0x2, VT_BOOL, propVal);
}

LPDISPATCH CAccessPict::GetPicture()
{
	LPDISPATCH result;
	GetProperty(0x4, VT_DISPATCH, (void*)&result);
	return result;
}

void CAccessPict::SetPicture(LPDISPATCH propVal)
{
	SetProperty(0x4, VT_DISPATCH, propVal);
}

short CAccessPict::GetBorderStyle()
{
	short result;
	GetProperty(DISPID_BORDERSTYLE, VT_I2, (void*)&result);
	return result;
}

void CAccessPict::SetBorderStyle(short propVal)
{
	SetProperty(DISPID_BORDERSTYLE, VT_I2, propVal);
}

CString CAccessPict::GetCaption()
{
	CString result;
	GetProperty(DISPID_CAPTION, VT_BSTR, (void*)&result);
	return result;
}

void CAccessPict::SetCaption(LPCTSTR propVal)
{
	SetProperty(DISPID_CAPTION, VT_BSTR, propVal);
}

LPFONTDISP CAccessPict::GetFont()
{
	LPFONTDISP result;
	GetProperty(DISPID_FONT, VT_DISPATCH, (void*)&result);
	return result;
}

void CAccessPict::SetFont(LPFONTDISP propVal)
{
	SetProperty(DISPID_FONT, VT_DISPATCH, propVal);
}

/////////////////////////////////////////////////////////////////////////////
// CAccessPict operations

BOOL CAccessPict::SetData(VARIANT* pvarData)
{
	BOOL result;
	static BYTE parms[] =
		VTS_PVARIANT;
	InvokeHelper(0x5, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		pvarData);
	return result;
}

void CAccessPict::AboutBox()
{
	InvokeHelper(0xfffffdd8, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}
