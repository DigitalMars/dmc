
TARGETOS=WINNT

!include <ntwin32.mak>

# application specific C defines

cf = -DNT -DWIN -DNOT_IMPLEMENTED -DDATADIR= $(scall) -W3 -DTEXTURE=1

# This line allows NMAKE to work as well

all: stonehen.exe

# Update the object file if necessary

atmosphe.obj: atmosphe.cxx atmosphe.h
    $(cc) $(cflags) $(cvars) $(cdebug) $(cf) atmosphe.cxx

callback.obj: callback.cxx callback.h
    $(cc) $(cflags) $(cvars) $(cdebug) $(cf) callback.cxx

ellipse.obj: ellipse.cxx ellipse.h
    $(cc) $(cflags) $(cvars) $(cdebug) $(cf) ellipse.cxx

# main.obj: main.cxx
#     $(cc) $(cflags) $(cvars) $(cdebug) $(cf) main.cxx

point.obj: point.cxx point.h
    $(cc) $(cflags) $(cvars) $(cdebug) $(cf) point.cxx

ring.obj: ring.cxx ring.h
    $(cc) $(cflags) $(cvars) $(cdebug) $(cf) ring.cxx

roundwal.obj: roundwal.cxx roundwal.h
    $(cc) $(cflags) $(cvars) $(cdebug) $(cf) roundwal.cxx

rgbimage.obj: rgbimage.cxx
    $(cc) $(cflags) $(cvars) $(cdebug) $(cf) rgbimage.cxx

scene.obj: scene.cxx scene.h
    $(cc) $(cflags) $(cvars) $(cdebug) $(cf) scene.cxx

stone.obj: stone.cxx stone.h
    $(cc) $(cflags) $(cvars) $(cdebug) $(cf) stone.cxx

telescop.obj: telescop.cxx telescop.h
    $(cc) $(cflags) $(cvars) $(cdebug) $(cf) telescop.cxx

timedate.obj: timedate.cxx timedate.h
    $(cc) $(cflags) $(cvars) $(cdebug) $(cf) timedate.cxx

stonehen.obj: stonehen.cxx stonehen.h
    $(cc) $(cflags) $(cvars) $(cdebug) $(cf) stonehen.cxx

setpixel.obj: setpixel.cxx setpixel.h
    $(cc) $(cflags) $(cvars) $(cdebug) $(cf) setpixel.cxx

stonehen.res: stonehen.rc stonerc.h
    rc -DTEXTURE=1 -r stonehen.rc

stonehen.exe: atmosphe.obj ellipse.obj stonehen.obj point.obj ring.obj callback.obj\
    roundwal.obj scene.obj stone.obj telescop.obj timedate.obj stonehen.res setpixel.obj rgbimage.obj
    $(link) $(linkdebug) /NODEFAULTLIB $(guilflags) -out:stonehen.exe \
    atmosphe.obj ellipse.obj point.obj ring.obj stonehen.obj callback.obj\
    roundwal.obj scene.obj stone.obj telescop.obj timedate.obj stonehen.res setpixel.obj rgbimage.obj \
    $(guilibs) opengl32.lib glu32.lib glaux.lib
