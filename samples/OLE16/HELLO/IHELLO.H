/* This header file machine-generated by mktyplib.exe */
/* Interface to type library: Hello */

#ifndef _Hello_H_
#define _Hello_H_

/* Definition of interface: _IHello */
DECLARE_INTERFACE_(_IHello, IUnknown)
{
    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* _IHello methods */
    STDMETHOD_(void, put_HelloMessage)(THIS_ BSTR b) PURE;
    STDMETHOD_(BSTR, get_HelloMessage)(THIS) PURE;
    STDMETHOD_(BSTR, SayHello)(THIS) PURE;
};

/* Definition of dispatch interface: _DHello */
DECLARE_INTERFACE_(_DHello, IDispatch)
{
    /* IUnknown methods */
    STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID FAR* ppvObj) PURE;
    STDMETHOD_(ULONG, AddRef)(THIS) PURE;
    STDMETHOD_(ULONG, Release)(THIS) PURE;

    /* IDispatch methods */
    STDMETHOD(GetTypeInfoCount)(THIS_ UINT FAR* pctinfo) PURE;

    STDMETHOD(GetTypeInfo)(
      THIS_
      UINT itinfo,
      LCID lcid,
      ITypeInfo FAR* FAR* pptinfo) PURE;

    STDMETHOD(GetIDsOfNames)(
      THIS_
      REFIID riid,
      char FAR* FAR* rgszNames,
      UINT cNames,
      LCID lcid,
      DISPID FAR* rgdispid) PURE;

    STDMETHOD(Invoke)(
      THIS_
      DISPID dispidMember,
      REFIID riid,
      LCID lcid,
      WORD wFlags,
      DISPPARAMS FAR* pdispparams,
      VARIANT FAR* pvarResult,
      EXCEPINFO FAR* pexcepinfo,
      UINT FAR* puArgErr) PURE;

/* Capable of dispatching all the methods of interface _IHello */
};

#endif
